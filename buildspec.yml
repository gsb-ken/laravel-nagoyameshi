version: 0.2

phases:
  pre_build:
    commands:
      - echo "[PRE_BUILD] Logging in to Amazon ECR..."
      - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin ${REPOSITORY_URI}

  build:
    commands:
      - echo "[BUILD] Building Laravel Docker image..."
      - docker build --no-cache -f Dockerfile.deployment -t ${CONTAINER_NAME} .
      - docker tag ${CONTAINER_NAME} ${REPOSITORY_URI}:latest

  post_build:
    commands:
      - echo "[POST_BUILD] Pushing image to ECR..."
      - docker push ${REPOSITORY_URI}:latest


      - echo "MIGRATION_TASK_DEFINITION=${MIGRATION_TASK_DEFINITION}"
      - echo "ECS_CLUSTER_NAME=${ECS_CLUSTER_NAME}"
      - echo "SUBNET_ID_1=${SUBNET_ID_1}"
      - echo "SUBNET_ID_2=${SUBNET_ID_2}"
      - echo "SECURITY_GROUP_ID=${SECURITY_GROUP_ID}"

      - aws ecs run-task ...
      - echo "[POST_BUILD] Running Laravel migration via ECS RunTask..."
      - |
        TASK_DEF_ARN=$(aws ecs list-task-definitions \
          --family-prefix nagoyameshi-prod-migrate \
          --sort DESC \
          --max-items 1 \
          --region ap-northeast-1 \
          --query 'taskDefinitionArns[0]' \
          --output text)
      - echo "[PostBuild] Running Laravel migration with $TASK_DEF_ARN"
        aws ecs run-task \
          --cluster ${ECS_CLUSTER_NAME} \
          --launch-type FARGATE \
          --task-definition ${MIGRATION_TASK_DEFINITION} \
          --network-configuration "awsvpcConfiguration={subnets=[${SUBNET_ID_1},${SUBNET_ID_2}],securityGroups=[${SECURITY_GROUP_ID}],assignPublicIp=DISABLED}" \
          --region ap-northeast-1

      - echo "[POST_BUILD] Writing imagedefinitions.json for ECS Deploy..."
      - printf '[{"name":"%s","imageUri":"%s:latest"}]' "$CONTAINER_NAME" "$REPOSITORY_URI" > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
