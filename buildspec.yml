version: 0.2

phases:
  pre_build:
    commands:
      - echo "[PRE_BUILD] Login to ECR"
      - aws ecr get-login-password --region ${AWS_REGION} \
        | docker login --username AWS --password-stdin \
          ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com

  build:
    commands:
      - echo "[BUILD] Build image"
      - docker build -f Dockerfile.deployment -t ${CONTAINER_NAME} .
      - docker tag ${CONTAINER_NAME} \
        ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/nagoyameshi-${ENVIRONMENT}-ecr:latest

  post_build:
    commands:
      - echo "[POST_BUILD] Push image"
      - docker push \
        ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/nagoyameshi-${ENVIRONMENT}-ecr:latest
      - echo "[POST_BUILD] Write imagedefinitions.json"
      - printf '[{"name":"%s","imageUri":"%s:latest"}]' \
          "$CONTAINER_NAME" "$REPOSITORY_URI" > imagedefinitions.json

      - echo "[MIGRATE] Run one-off task"
      - |
        TASK_ARN=$(aws ecs run-task \
          --cluster ${ECS_CLUSTER_NAME} \
          --launch-type FARGATE \
          --task-definition ${MIGRATION_TASK_DEFINITION} \
          --network-configuration "awsvpcConfiguration={subnets=[${SUBNET_ID_1},${SUBNET_ID_2}],securityGroups=[${SECURITY_GROUP_ID}],assignPublicIp=DISABLED}" \
          --region ap-northeast-1 \
          --query 'tasks[0].taskArn' --output text)
        echo "[MIGRATE] TASK_ARN=${TASK_ARN}"
        aws ecs wait tasks-stopped \
          --cluster ${ECS_CLUSTER_NAME} \
          --tasks ${TASK_ARN} \
          --region ap-northeast-1
        # （任意）直近ログを少しだけ出す。失敗してもパイプラインは止めない
        aws logs filter-log-events \
          --log-group-name "/ecs/${PROJECT}-${ENVIRONMENT}/task/migrate" \
          --region ap-northeast-1 \
          --start-time $(($(date +%s)*1000-600000)) \
          --query 'events[-50:].message' --output text || true

artifacts:
  files:
    - imagedefinitions.json
